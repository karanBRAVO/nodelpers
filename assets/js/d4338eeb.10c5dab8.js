"use strict";(self.webpackChunknodelpers_docs=self.webpackChunknodelpers_docs||[]).push([[641],{427:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"utils/console/log-to-console","title":"logToConsole","description":"Logs a message to the console with a specified log level and optionally saves it to a file.","source":"@site/docs/utils/console/logToConsole.md","sourceDirName":"utils/console","slug":"/utils/console/log-to-console","permalink":"/nodelpers/docs/utils/console/log-to-console","draft":false,"unlisted":false,"editUrl":"https://github.com/karanBRAVO/nodelpers/tree/main/docs/docs/utils/console/logToConsole.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"log-to-console","sidebar_label":"Console Log","sidebar_position":1},"sidebar":"docSidebar","previous":{"title":"Locally","permalink":"/nodelpers/docs/contributing/locally"},"next":{"title":"Generate Hash","permalink":"/nodelpers/docs/utils/crypto/generate-string-hash"}}');var s=n(4848),t=n(8453);const r={id:"log-to-console",sidebar_label:"Console Log",sidebar_position:1},i="logToConsole",c={},d=[];function a(e){const o={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"logtoconsole",children:"logToConsole"})}),"\n",(0,s.jsx)(o.p,{children:"Logs a message to the console with a specified log level and optionally saves it to a file."}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"import the method"}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-js",children:'import { logToConsole } from "nodelpers";\n'})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"params"}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-js",children:'message: any;\noptions: ILogOptions;\n\nTLogLevel = "default" | "info" | "warn" | "error";\n\nILogOptions {\n  level: TLogLevel;\n  devOnly?: boolean; // Only log in non-production environments\n  logPath?: string; // File path to save logs\n}\n'})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"setup"}),"\n"]}),"\n",(0,s.jsxs)(o.p,{children:["set ",(0,s.jsx)(o.code,{children:"NODE_ENV"})," to either ",(0,s.jsx)(o.code,{children:"production"})," or ",(0,s.jsx)(o.code,{children:"development"})," in .env file."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-text",children:"NODE_ENV=development\n"})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"usage"}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-js",children:'logToConsole("Hello World!");\nlogToConsole("Hello World!", { devOnly: true });\nlogToConsole("Hello World!", { logPath: "/path/to/logs.txt" });\n'})})]})}function p(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>i});var l=n(6540);const s={},t=l.createContext(s);function r(e){const o=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(t.Provider,{value:o},e.children)}}}]);